---
export interface Props {
	title?: string;
	description?: string;
	type?: 'website' | 'article';
	image?: string;
	url?: string;
	siteName?: string;
	episodeTitle?: string;
	episodeDescription?: string;
}

const {
	title = "Spooky Bitch Show - Der Grusel und Mystery Podcast",
	description = "Ein Podcast voller Spannung, Grusel und Mystery. Neue Folgen alle 2 Wochen mit euren Hosts Rikku & Tai.",
	type = "website",
	image,
	url = Astro.url.href,
	siteName = "Spooky Bitch Show",
	episodeTitle,
	episodeDescription
} = Astro.props;

// Use episode-specific data if provided, otherwise default to home image
const ogTitle = episodeTitle ? `${episodeTitle} - ${siteName}` : title;
const ogDescription = episodeDescription || description;
const ogType = episodeTitle ? "article" : type;
const ogImage = image || "/images/og-home.png";

// Safely construct the image URL
const getImageUrl = (imagePath: string) => {
	if (!imagePath) return '';
	if (imagePath.startsWith('http')) {
		return imagePath;
	}
	const baseUrl = Astro.site?.href || Astro.url.origin;
	try {
		return new URL(imagePath, baseUrl).href;
	} catch (error) {
		console.warn('Invalid image path:', imagePath, error);
		return '';
	}
};
---

<!-- Open Graph / Facebook -->
<meta property="og:type" content={ogType} />
<meta property="og:url" content={url} />
<meta property="og:title" content={ogTitle} />
<meta property="og:description" content={ogDescription} />
<meta property="og:image" content={getImageUrl(ogImage)} />
<meta property="og:site_name" content={siteName} />

<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:url" content={url} />
<meta name="twitter:title" content={ogTitle} />
<meta name="twitter:description" content={ogDescription} />
<meta name="twitter:image" content={getImageUrl(ogImage)} />

<!-- Additional meta tags -->
<meta name="description" content={ogDescription} />
<link rel="canonical" href={url} />
